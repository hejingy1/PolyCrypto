import datetime
from ipaddress import v4_int_to_packed
from matplotlib import pyplot as plt
import pandas as pd
import numpy as np
import mplfinance as mpf
from dateutil.relativedelta import *
from simulation import construct_illiquidity

from PolygonFunctionsCrypto import Get_historical_data

"""
爆仓单量可能和稳定币需求上升挂钩，补仓需要稳定币来加速交易补仓
"""

collect_times = 100
selling_time = 30
a = []
starting_month = datetime.date(2021, 1, 20)
date_list = [starting_month + relativedelta(months=+x) for x in range(11)]


eth_dump = Get_historical_data("X:ETHUSD", date_list[0], date_list[0]+relativedelta(days=+5), span="minute")
eth_dump_np = eth_dump.to_numpy()

eth_illiq_list, eth_illiq = construct_illiquidity(eth_dump_np, collect_times)
# apd = mpf.make_addplot(eth_illiq[:, 3], type='scatter')
s = []
for i in eth_illiq:
    if i[8] <= eth_illiq_list[-1, 8]:
        s.append(i[3])
    else:
        s.append(np.nan)
apd = mpf.make_addplot(s, type='scatter', markersize = 8, color='blue')
mpf.plot(eth_dump, type='line', volume=True, style='yahoo', addplot=apd, tight_layout=True)




