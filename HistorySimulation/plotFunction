import datetime
from ipaddress import v4_int_to_packed
from matplotlib import pyplot as plt
import pandas as pd
import numpy as np
import mplfinance as mpf
from dateutil.relativedelta import *
from simulation import construct_illiquidity

from PolygonFunctionsCrypto import Get_historical_data

"""
到时候需要全部重新的构思一下数据结构的调用，pandas和numpy的变换减少
"""

collect_times = 10
selling_time = 2
a = []
starting_month = datetime.date(2021, 1, 20)
date_list = [starting_month + relativedelta(months=+x) for x in range(11)]


eth_dump = Get_historical_data("X:ETHUSD", date_list[0], date_list[0]+relativedelta(days=+5), span="minute")
eth_dump_cut = eth_dump.between_time("22:00", "03:00")

eth_dump_np = eth_dump_cut.to_numpy()
eth_dump_np_2 = eth_dump.to_numpy()

eth_illiq_sorted, eth_illiq = construct_illiquidity(eth_dump_np, collect_times)
liquidity_index = ((eth_dump_np_2[:, 3] - eth_dump_np_2[:, 2])*10000/eth_dump_np_2[:, 2])/ eth_dump_np_2[:, -1]
eth_dump_np_2 = np.c_[eth_dump_np_2, liquidity_index]
# apd = mpf.make_addplot(eth_illiq[:, 3], type='scatter')
s = []
for i in eth_dump_np_2:
    if i[8] <= eth_illiq_sorted[-1, 8] and (i[6].hour>3 and i[6].hour<22):
        s.append(i[3])
    else:
        s.append(np.nan)
apd = mpf.make_addplot(s, type='scatter', markersize = 8, color='red')
mpf.plot(eth_dump, type='line', volume=True, style='yahoo', addplot=apd, tight_layout=True)




